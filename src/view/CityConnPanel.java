/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import entity.City;
import entity.Route;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import main.Controller;
import main.ValueListener;

/**
 *
 * @author Krisztian
 */
public class CityConnPanel extends javax.swing.JPanel {

    private final List<ValueListener> listeners = new ArrayList<>();

    public void addListener(ValueListener listener) {
        listeners.add(listener);
    }

    private void notifyListeners() {
        for (ValueListener listener : listeners) {
            listener.OnSubmitted(2);
        }
    }

    /**
     * Creates new form CityConnPanel
     */
    public CityConnPanel() {
        initComponents();
        rbtnNew.setSelected(true);
        setGUI();
    }

    private void setGUI() {
        SetRoutesList();
        SetCmbBoxStart();
        btnSave.setEnabled(false);
        if (rbtnNew.isSelected()) {
            cmbStart.setEnabled(true);
            cmbDest.setEnabled(false);
            listRoutes.setEnabled(false);
        } else if (rbtnDelete.isSelected()) {
            cmbStart.setEnabled(false);
            cmbDest.setEnabled(false);
            listRoutes.setEnabled(true);

        }
    }

    private void SetCmbBoxStart() {
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        List<City> list = Controller.GetCities();
        for (City c : list) {
            model.addElement(c);
        }
        cmbStart.setModel(model);
    }

    private void SetCmbBoxDest() {
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        List<City> list = Controller.GetNotP2PConnectedCities((City) cmbStart.getSelectedItem());
        for (City c : list) {
            model.addElement(c);
        }
        cmbDest.setModel(model);

    }

    private void SetRoutesList() {
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        List<Route> list = Controller.GetP2PCities();
        for (Route c : list) {
            model.addElement(c);
        }
        listRoutes.setModel(model);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGrp = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        cmbStart = new javax.swing.JComboBox();
        rbtnNew = new javax.swing.JRadioButton();
        rbtnDelete = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        cmbDest = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listRoutes = new javax.swing.JList();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Start city:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 38, -1, -1));

        cmbStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbStartActionPerformed(evt);
            }
        });
        add(cmbStart, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 53, 155, -1));

        btnGrp.add(rbtnNew);
        rbtnNew.setText("New");
        rbtnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnNewActionPerformed(evt);
            }
        });
        add(rbtnNew, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 7, -1, -1));

        btnGrp.add(rbtnDelete);
        rbtnDelete.setText("Delete");
        rbtnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnNewActionPerformed(evt);
            }
        });
        add(rbtnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(75, 7, -1, -1));

        jLabel2.setText("Destination city:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 79, -1, -1));

        cmbDest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDestActionPerformed(evt);
            }
        });
        add(cmbDest, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 99, 155, -1));

        jLabel3.setText("Routes");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 125, -1, -1));

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 376, 155, -1));

        listRoutes.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        listRoutes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                listRoutesMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(listRoutes);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 145, 155, 204));
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (rbtnNew.isSelected()) {
            SaveConnection();
        } else if (rbtnDelete.isSelected()) {
            if (listRoutes.getSelectedValue() != null) {
                int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "Are you really want to delete this connection?", "Warning", dialogButton);
            if (dialogResult == JOptionPane.YES_OPTION) {
                Controller.DelCityConn((Route) listRoutes.getSelectedValue());}
            } else {

            }
        }
        setGUI();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void cmbStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbStartActionPerformed
        SetCmbBoxDest();
        cmbDest.setEnabled(true);
        List<City> tmp = new ArrayList<>();
        tmp.add((City) cmbStart.getSelectedItem());
        Controller.setcConnPanel(tmp);
        notifyListeners();
    }//GEN-LAST:event_cmbStartActionPerformed

    private void rbtnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnNewActionPerformed
        setGUI();
    }//GEN-LAST:event_rbtnNewActionPerformed

    private void cmbDestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDestActionPerformed
        btnSave.setEnabled(true);
        List<City> tmp = new ArrayList<>();
        tmp.add((City) cmbStart.getSelectedItem());
        tmp.add((City) cmbDest.getSelectedItem());
        Controller.setcConnPanel(tmp);
        notifyListeners();
    }//GEN-LAST:event_cmbDestActionPerformed

    private void listRoutesMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listRoutesMouseReleased
        if (rbtnDelete.isSelected()) {
            btnSave.setEnabled(true);
            
        
        
        Controller.setcConnPanel(((Route)listRoutes.getSelectedValue()).getCityList());
        notifyListeners();
            
            
        }
    }//GEN-LAST:event_listRoutesMouseReleased

    private void SaveConnection() {
        System.out.println("VIEW: "+cmbStart.getSelectedItem().toString()+ " "+cmbDest.getSelectedItem().toString());
        if (cmbStart.getSelectedItem() != null && cmbDest.getSelectedItem() != null) {
            Controller.AddCityConn((City) cmbStart.getSelectedItem(), (City) cmbDest.getSelectedItem());
            
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btnGrp;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox cmbDest;
    private javax.swing.JComboBox cmbStart;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList listRoutes;
    private javax.swing.JRadioButton rbtnDelete;
    private javax.swing.JRadioButton rbtnNew;
    // End of variables declaration//GEN-END:variables
}
